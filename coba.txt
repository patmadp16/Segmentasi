from flask import Flask, render_template, request, redirect, url_for
#import keras as keras
import keras._tf_keras.keras
from keras.models import load_model
from keras.preprocessing.image   import img_to_array, load_img
import numpy as np
import os
#rom keras.models import load_model
#from keras.preprocessing import image

app = Flask(__name__)

{'non kanker': 0, 'kanker usus': 1}

#extension image
ALLOWED_EXTENSIONS = {'png','jpg','jpeg','gif'}

model_path = 'segmentation_model.h5'
modelQ = load_model(model_path)

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.',1)[1].lower() in ALLOWED_EXTENSIONS

def classify_image(file_path):
    img = load_img(file_path, target_size = (150, 150))
    img_array = img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array /= 255.0

    predictions = modelQ.predict(img_array)
    confidence  = np.max(predictions)
    predictions_class   = np.argmax(predictions, axis=1)[0]


    #debugging, and print confidence value
    print(f"Prediction : {predictions}")
    print(f"Confidence  : {confidence}"git remote add origin https://repository.remote.url

)

    #convert confidence to percentage
    confidence_persentage   = confidence * 100
    confidence_persentage   = f"{confidence_persentage:.2f}"

    return predictions_class, confidence_persentage

@app.route('/', methods = ['GET','POST'])
def upload_file():
    if request.method == 'POST':
        if 'file' not in request.files:
            return redirect(request.url)
        file = request.files['file']
        if file.filename == '':
            return redirect('request.url')
        
        if file and allowed_file(file.filename):
            filename = file.filename
            file_path   = os.path.join('static', filename)
            file.save(file_path)
            predicted_class, confidenceV = classify_image(file_path) 
            
            return render_template('index.html', filename=filename, predicted_class = predicted_class, confidenceV=confidenceV)
    return render_template('index.html')

@app.route('/uploads/<filename>')
def uploaded_file():
    return redirect(url_for('static', filename = filename))

if __name__ == '__main__':
    app.run(debug=True)

    from flask import Flask, render_template, request
from tensorflow import keras
from tensorflow.keras.preprocessing import image
from PIL import Image
import numpy as np


app = Flask(__name__)


@app.route('/', methods=['GET'])
def index():
  return render_template('index.html')

@app.route('/', methods=['POST'])
def predict():
  imagefile = request.files['flowerimage']
  image_path = "static/" + imagefile.filename
  imagefile.save(image_path)

  IMAGE_SIZE = (100,100)
  BATCH_SIZE = 32

  model = keras.models.load_model('static/klasifikasi.h5')
  img = image.load_img(image_path, target_size=IMAGE_SIZE)
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
 
  images = np.vstack([x])
  classes = model.predict(images, batch_size=BATCH_SIZE)
  classes = np.argmax(classes)
  if classes==0:
    result = "no kanker"
    print('Sehat')
  else:
    result = "kanker usus"
    print('terdeteksi kanker')

  return render_template('index.html', prediction=result, img_file=image_path)

if __name__ == "__main__":
  app.run(host='0.0.0.0', port=80, debug=True)
